name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Debug Python version
      run: |
        echo "Matrix Python version: ${{ matrix.python-version }}"
        echo "Python version: $(python --version)"
        echo "Python location: $(which python)"
        echo "Python executable: $(python -c 'import sys; print(sys.executable)')"
        echo "Python version info: $(python -c 'import sys; print(f"{sys.version_info.major}.{sys.version_info.minor}")')"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install flake8 black mypy pytest pytest-asyncio pytest-cov
        echo "Python packages installed:"
        pip list | grep -E "(flake8|black|mypy|pytest)"

    - name: Lint with flake8
      run: |
        python -m flake8 decision_layer tests

    - name: Check formatting with black
      run: |
        python -m black --check decision_layer tests

    - name: Type check with mypy
      run: |
        python -m mypy decision_layer

    - name: Test with pytest
      run: |
        python -m pytest tests/ -v --cov=decision_layer --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
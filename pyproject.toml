[build-system]
requires = [ "setuptools>=61.0", "wheel",]
build-backend = "setuptools.build_meta"

[project]
name = "policy-as-code"
version = "2.0.0"
description = "Production-grade governance platform for managing decision logic as versioned, auditable, and governable software artifacts"
readme = "README.md"
keywords = [ "governance", "policy", "decision-logic", "audit", "compliance", "trace-ledger", "digital-signatures",]
classifiers = [ "Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Legal Industry", "Intended Audience :: Financial and Insurance Industry", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Testing", "Topic :: System :: Monitoring", "Topic :: Office/Business :: Financial", "Topic :: Security :: Cryptography",]
requires-python = ">=3.8"
dependencies = [ "click>=8.0.0", "pydantic>=2.5.0", "pyyaml>=6.0.1", "rich>=13.0.0",]
[[project.authors]]
name = "Eevamaija Virtanen"

[[project.maintainers]]
name = "Eevamaija Virtanen"

[project.license]
text = "MIT"

[project.optional-dependencies]
dev = [ "pytest>=7.4.0", "black>=23.9.0", "flake8>=6.1.0", "mypy>=1.6.0",]
test = [ "pytest>=7.4.0",]
docs = [ "sphinx>=7.2.0", "sphinx-rtd-theme>=1.3.0", "sphinx-autodoc-typehints>=1.24.0", "myst-parser>=2.0.0", "sphinx-copybutton>=0.5.0", "sphinx-tabs>=3.4.0",]
production = [ "fastapi>=0.104.0", "uvicorn[standard]>=0.24.0", "pandas>=2.1.0", "asyncpg>=0.29.0", "sqlalchemy>=2.0.0", "alembic>=1.12.0", "redis>=5.0.0", "celery>=5.3.0", "prometheus-client>=0.19.0", "structlog>=23.2.0", "tenacity>=8.2.0", "cryptography>=41.0.0", "psycopg2-binary>=2.9.0", "python-multipart>=0.0.6", "httpx>=0.25.2", "numpy>=1.24.0",]
monitoring = [ "prometheus-client>=0.19.0", "structlog>=23.2.0", "sentry-sdk[fastapi]>=1.38.0", "opentelemetry-api>=1.21.0", "opentelemetry-sdk>=1.21.0", "opentelemetry-instrumentation-fastapi>=0.42b0",]

[project.scripts]
policy-as-code = "policy_as_code.cli:cli"

[project.urls]
Homepage = "https://github.com/data-riot/policy-as-code"
Documentation = "https://github.com/data-riot/policy-as-code#readme"
Repository = "https://github.com/data-riot/policy-as-code"
"Bug Tracker" = "https://github.com/data-riot/policy-as-code/issues"

[tool.black]
line-length = 88
target-version = [ "py38", "py39", "py310", "py311",]

[tool.mypy]
python_version = "3.9"
ignore_missing_imports = true

[tool.setuptools.package-data]
policy_as_code = [ "py.typed",]

[tool.pytest.ini_options]
testpaths = [ "tests",]
python_files = [ "test_*.py", "*_test.py",]

[tool.coverage.run]
source = [ "policy_as_code",]
omit = [ "*/tests/*", "*/__pycache__/*",]

[tool.setuptools.packages.find]
where = [ ".",]
include = [ "policy_as_code*",]
exclude = [ "tests*", "examples*", "docs*",]
